{"version":3,"sources":["components/LandingPage/NavBar.js","components/About/images/linkedin-icon.png","components/About/images/github-icon.png","components/About/CrewCard.js","components/About/About.js","components/Dashboard/DarthVader.png","components/Dashboard/KeywordTag.js","components/LandingPage/BlogCard.js","components/Dashboard/Dashboard.js","components/SignIn/yoda.png","components/SignIn/SignIn.js","components/YouTube/YouTubeVideos.js","components/YouTube/GradVideos.js","components/LandingPage/TitleCard.js","components/LandingPage/LandingContainer.js","components/LandingPage/LandingPage.js","Router.js","App.js","index.js"],"names":["NavBar","className","Navbar","bg","variant","Brand","href","Nav","Link","NavDropdown","title","id","Item","CrewCard","props","crew","name","position","linkedin","target","rel","src","alt","linkedinHandle","github","githubHandle","image","Dashboard","crews","map","Keyword","useState","tags","setTags","tag","index","onClick","removeTag","filter","indexOf","selectedTags","removeTags","type","onKeyUp","event","key","value","addTag","addTags","placeholder","required","BlogCard","blogImage","blog","Card","Text","style","fontSize","category","Image","fluid","display","width","url","textDecoration","Title","overflow","description","color","date","initialBlogState","peekalinkUrl","setPeekalinkUrl","state","setState","handleChange","evt","onSubmitToPeekalink","a","axios","post","then","res","data","toast","onSubmitForm","e","preventDefault","status","DV","Form","Group","Row","Label","Col","sm","Control","onChange","Button","as","rows","disabled","hidden","KeywordTag","toastConfig","cookie","parse","document","email","password","credentials","setCredentials","setUserId","setErrMsg","redirectToDash","setRedirectToDash","redirectToSignIn","setRedirectToSignIn","onSignIn","token","catch","error","response","onRegister","userId","to","handleTextChange","creds","submitButtonSwitch","toggleBtns","querySelectorAll","i","length","addEventListener","toggleFormAnimation","firstClick","querySelector","classList","add","toggle","htmlFor","yoda","height","YouTubeVideos","backendData","setBackendData","videoIds","setVideoIds","useEffect","fetch","json","body","Error","message","callBackendAPI","items","err","console","log","forEach","item","snippet","resourceId","videoId","opts","playerVars","GradVideos","mainVid","setMainVid","vidImage","setVidImage","setTitle","setDescription","randomNumber","setRandomNumber","Math","floor","random","thumbnails","standard","onEnd","idx","setCurrentVideo","TitleCard","Body","padding","LandingContainer","blogs","setBlogs","get","reverse","backgroundColor","border","LandingPage","class","Router","exact","path","component","About","SignIn","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2acd7de2.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"main-nav sticky-top\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Beyond Bootcamp</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/about\">About Us</Nav.Link>\n          <Nav.Link href=\"/youtube\">Tutorials</Nav.Link>\n          <Nav.Link href=\"/gradVideos\">GradTV</Nav.Link>\n        </Nav>\n        <NavDropdown title=\"Filter\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Tools</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Front End</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Back End</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.4\">Tech News</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.5\">Future of Code</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.6\">\n            Personal Development\n          </NavDropdown.Item>\n        </NavDropdown>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/linkedin-icon.acd946de.png\";","export default __webpack_public_path__ + \"static/media/github-icon.d5ae73fc.png\";","import React from \"react\";\nimport \"./about.css\";\nimport linkedin from \"./images/linkedin-icon.png\";\nimport github from \"./images/github-icon.png\";\n\nexport default function CrewCard(props) {\n  const crew = props.crew;\n  return (\n    <>\n      <div className=\"crew-card-container\">\n        <div className=\"crew-card-text-container\">\n          <h5 className=\"crew-card-name\">{crew.name}</h5>\n          <p className=\"crew-card-position\">{crew.position}</p>\n          <a className=\"crew-card-icon\" href={crew.linkedin} target=\"_blank\" rel=\"noreferrer\">\n            <img\n              className=\"crew-card-icon-image\"\n              src={linkedin}\n              alt=\"linkedin icon\"\n            />\n            <p className=\"crew-card-icon-text\">@{crew.linkedinHandle}</p>\n          </a>\n          <a className=\"crew-card-icon\" href={crew.github} target=\"_blank\" rel=\"noreferrer\">\n            <img\n              className=\"crew-card-icon-image\"\n              src={github}\n              alt=\"github icon\"\n            />\n            <p className=\"crew-card-icon-text\">@{crew.githubHandle}</p>\n          </a>\n        </div>\n        <img className=\"crew-card-image\" src={crew.image} alt=\"team member\" />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./about.css\";\nimport NavBar from \"../LandingPage/NavBar\";\nimport CrewCard from \"./CrewCard\";\nimport crews from \"./crew.json\";\n\nexport default function Dashboard() {\n  return (\n    <>\n      <NavBar />\n      <div className=\"about-title-container\">\n        <h1 id=\"about-title\">Meet the Crew</h1>\n      </div>\n      <h3 className=\"about-subtitle\">~ About us ~</h3>\n      <p className=\"about-main\">\n        Prow scuttle parrel provost Sail ho shrouds spirits boom mizzenmast\n        yardarm. Pinnace holystone mizzenmast quarter crow's nest nipperkin grog\n        yardarm hempen halter furl. Swab barque interloper chantey doubloon\n        starboard grog black jack gangway rutters. Deadlights jack lad schooner\n        scallywag dance the hempen jig carouser broadside cable strike colors.\n        Bring a spring upon her cable holystone blow the man down spanker Shiver\n        me timbers to go on account lookout wherry doubloon chase. Belay\n        yo-ho-ho keelhaul squiffy black spot yardarm spyglass sheet transom\n        heave to. Trysail Sail ho Corsair red ensign hulk smartly boom jib rum\n        gangway. Case shot Shiver me timbers gangplank crack Jennys tea cup\n        ballast Blimey lee snow crow's nest rutters. Fluke jib scourge of the\n        seven seas boatswain schooner gaff booty Jack Tar transom spirits.\n      </p>\n      <h3 className=\"about-subtitle\">~ The Crew ~</h3>\n      <div className=\"crew-container-1\">\n        {crews.map((crew, id) => (\n          <CrewCard key={id} crew={crew} />\n        ))}\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/DarthVader.9f9000a3.png\";","import React, { useState } from \"react\";\nimport \"./dashboard.css\";\n\nconst Keyword = (props) => {\n  const [tags, setTags] = useState([]);\n  const addTags = (event) => {\n    if (event.key === \"Enter\" && event.target.value !== \"\") {\n      const addTag = [...tags, event.target.value];\n      setTags(addTag);\n      props.selectedTags(addTag);\n      event.target.value = \"\";\n    }\n  };\n  const removeTags = (index) => {\n    const removeTag = [...tags.filter((tag) => tags.indexOf(tag) !== index)];\n    setTags(removeTag);\n    props.selectedTags(removeTag);\n  };\n\n  return (\n    <div className=\"tags-input\">\n      <ul id=\"tags\">\n        {tags.map((tag, index) => (\n          <li key={index} className=\"tag\">\n            <span className=\"tag-title\">{tag}</span>\n            <span className=\"tag-close-icon\" onClick={() => removeTags(index)}>\n              x\n            </span>\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        onKeyUp={(event) => addTags(event)}\n        placeholder=\"Press enter to add tags\"\n        required\n      />\n    </div>\n  );\n};\n\nexport default Keyword;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./landingPage.css\";\nimport Image from \"react-bootstrap/Image\";\n\nconst BlogCard = (props) => {\n  const blogImage = props.blog.image ?? \"https://images.unsplash.com/photo-1534665482403-a909d0d97c67?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1050&q=80\";\n  return (\n    <>\n        <Card className=\"bg-dark text-white box1 desc-btn-1\">\n          <Card.Text\n            className=\"blog-card-category\"\n            style={{ fontSize: \".8rem\" }}\n          >\n            {props.blog.category}\n          </Card.Text>\n          <div id=\"blog-card-image\" >\n            <Image src={blogImage} fluid style={{display: \"block\", width: \"100%\"}} />\n          </div>\n          <a href={props.blog.url} target=\"_blank\" rel=\"noreferrer\" id=\"title-link-hover\" style={{textDecoration: \"none\"}}>\n          <Card.Title className=\"blog-card-title\">\n            {props.blog.title} \n          </Card.Title>\n          </a>\n          <Card.Text className=\"blog-description\" style={{ fontSize:\".8rem\", overflow: \"hidden\" }}>\n                  {props.blog.description}\n                </Card.Text>\n                <Card.Text style={{color: \"#999D9F\"}}>{props.blog.date}</Card.Text>\n        </Card>\n    </>\n  );\n};\n\nexport default BlogCard;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./dashboard.css\";\nimport axios from \"axios\";\nimport DV from \"./DarthVader.png\";\nimport KeywordTag from \"./KeywordTag\";\nimport BlogCard from \"../LandingPage/BlogCard\";\nimport toast, { toastConfig } from \"react-simple-toasts\";\n\ntoastConfig({\n  position: \"right\",\n});\n\nexport default function Dashboard() {\n  const initialBlogState = {\n    blog: {\n      title: \"\",\n      description: \"\",\n      url: \"\",\n      category: \"\",\n      tags: [],\n    },\n  };\n  // URL that we are sending to API\n  const [peekalinkUrl, setPeekalinkUrl] = useState(\"\");\n\n  // Response from API\n  const [state, setState] = useState(initialBlogState);\n\n  // Sets state and handles selected tags in KeywordTag component\n  const selectedTags = (tags) =>\n    setState({\n      ...state,\n      blog: { ...state.blog, tags: [...tags] },\n    });\n\n  // handles changes only for URL that we send to API\n  const handleUrlChange = (e) => {\n    setPeekalinkUrl(e.target.value);\n  };\n\n  // handles changes for inputs we receive from API\n  const handleChange = (evt) => {\n    const value = evt.target.value || \"\";\n    setState({\n      ...state,\n      blog: { ...state.blog, [evt.target.name]: value },\n    });\n  };\n\n  // call to API\n  const onSubmitToPeekalink = async () => {\n    try {\n      const blog = await axios\n        .post(\n          `http://localhost:4001/peekalink`,\n          { url: peekalinkUrl },\n          { \"Content-Type\": \"application/json\" }\n        )\n        .then((res) => {\n          return res.data;\n        });\n      // Destructing keys being used from API response\n      const {\n        title,\n        description,\n        url,\n        image: { url: image },\n      } = blog;\n      // Setting state from API\n      setState({ blog: { title, description, url, image } });\n    } catch (error) {\n      toast(`Woah! There is an error! ${error}`);\n    }\n  };\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      await axios\n        .post(\n          `http://localhost:4001/blogs`,\n          { ...state.blog },\n          { \"Content-Type\": \"application/json\" }\n        )\n        .then((res) => {\n          if (res.status === 200) {\n            toast(\"Congrats! You just created a new post!\");\n            setState(initialBlogState);\n            setPeekalinkUrl(\"\");\n          }\n        });\n    } catch (error) {\n      toast(`Uh oh! There is an error! ${error}`);\n    }\n  };\n\n  // Need to add date below once functionality is created.\n  const { title, description, url, category,tags } = state.blog;\n  return (\n    <>\n      <img src={DV} alt=\"Darth Vader emoji\" className=\"dash-image\" />\n      <h3 className=\"dash-title\"> Keith! I am your Dashboard.</h3>\n      <Form\n        className=\"dash-body\"\n        id=\"dash-api-submit-form\"\n      >\n        <Form.Group>\n          <Form.Row className=\"dash-form\">\n            <Form.Label>Blog URL</Form.Label>\n          </Form.Row>\n          <Form.Row className=\"dash-form\">\n            <Col sm={10}>\n              <Form.Control\n                onChange={handleUrlChange}\n                placeholder=\"www.website.com\"\n                className=\"dash-blog-url-form-control\"\n                value={peekalinkUrl}\n                required={true}\n              />\n            </Col>\n            <Col sm={2}>\n              <Button\n                id=\"blog-url-input-button\"\n                variant=\"outline-dark\"\n                onClick={onSubmitToPeekalink}\n              >\n                Peekalink\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form.Group>\n      </Form>\n      <Form className=\"dash-body\">\n        <Form.Group className=\"dash-form\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            placeholder=\"Title of Article\"\n            name=\"title\"\n            value={title}\n            required={true}\n          />\n        </Form.Group>\n        <Form.Group className=\"dash-form\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            onChange={handleChange}\n            name=\"description\"\n            placeholder=\"Description of Article\"\n            value={description}\n            required={true}\n          />\n        </Form.Group>\n        <Form.Group className=\"dash-form\">\n          <Form.Label>Site URL</Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            placeholder=\"URL\"\n            name=\"url\"\n            value={url}\n            required={true}\n          />\n        </Form.Group>\n        <Form.Group className=\"dash-form\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={handleChange}\n            value={category}\n            name=\"category\"\n            required={true}\n            placeholder=\"Select a Category\"\n          >\n            <option value=\"\" disabled hidden>\n              Select a Category\n            </option>\n            <option value=\"tools\">Tools</option>\n            <option value=\"front_end\">Front End</option>\n            <option value=\"back_end\">Back End</option>\n            <option value=\"tech_news\">Tech News</option>\n            <option value=\"future_of_code\">Future of Code</option>\n            <option value=\"personal_development\">Personal Development</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group className=\"dash-form\">\n          <Form.Label>Keyword</Form.Label>\n          <KeywordTag\n            className=\"dash-form-keyword\"\n            selectedTags={selectedTags}\n            value={tags}\n          />\n        </Form.Group>\n        {/* ***** Hidden until functionality is given ******* */}\n        {/* <Form.Group className=\"dash-form\">\n          <Form.Label>Schedule Publish Date</Form.Label> <br />\n          <input\n            onChange={handleChange}\n            className=\"scheduler-input\"\n            type=\"date\"\n            name=\"date\"\n            id=\"date\"\n            value={date}\n            required={true}\n          />\n        </Form.Group> */}\n        <div id=\"dash-example-tiles-container\">\n          <BlogCard blog={state.blog} />\n        </div>\n        <div className=\"dash-form-submit-button-container\">\n          <Button\n            id=\"dash-form-submit-button\"\n            variant=\"primary\"\n            onClick={onSubmitForm}\n          >\n            Post blog\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n\n// KEITHS CODE TO ADD LATER\n// Peekalink has to run before this code runs, and this code is helping find keywords within the title and description.\n// for (let row = 0; row < rows.length; row++) {\n//   let keys = [];\n//   let text2search = (rows[row][1] + \" \" + rows[row][2]).toLowerCase();\n//   console.log(text2search);\n//   for (let keyword = 0; keyword < keywordz.length; keyword++) {\n//     if (text2search.includes(keywordz[keyword])) {\n//       keys.push(keywordz[keyword]);\n//     }\n//   }\n//   console.log(keys);\n//   rows[row].push;\n// }\n","export default __webpack_public_path__ + \"static/media/yoda.38ad3a64.png\";","import React, { useState } from \"react\";\nimport \"./signIn.css\";\nimport yoda from \"./yoda.png\";\nimport { Redirect } from \"react-router-dom\";\nimport cookie from \"cookie\";\nimport axios from \"axios\";\n\nexport default function Dashboard() {\n  const cookies = cookie.parse(document.cookie);\n\n  // set state for creds\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // set state to create an id for new users\n  const [userId, setUserId] = useState(null);\n\n  // state for error handling\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  // state for redirect\n  const [redirectToDash, setRedirectToDash] = useState(false);\n  const [redirectToSignIn, setRedirectToSignIn] = useState(false);\n\n  // Sign in function and validate creds\n  const onSignIn = async () => {\n    await axios\n      .post(\n        `http://localhost:4001/signin`,\n        { ...credentials },\n        { \"Content-Type\": \"application/json\" }\n      )\n      .then((res) => {\n        document.cookie = `token=${res.data.token}`;\n        document.cookie = \"loggedIn=true\";\n        setRedirectToDash(true);\n      })\n      .catch((error) => {\n        if (error.response.status === 404) {\n          setErrMsg(\n            \"Who sent you? Account does not exist with this email or password.\"\n          );\n        } else {\n          setErrMsg(`There is an error! ${error}`);\n        }\n      });\n  };\n\n  // Sign up fucntion and create/save creds\n  const onRegister = async () => {\n    try {\n      await axios\n        .post(\n          `http://localhost:4001/createuser`,\n          { ...credentials },\n          { \"Content-Type\": \"application/json\" }\n        )\n        .then((res) => {\n          setUserId(res.userId);\n          setRedirectToSignIn(true);\n        });\n    } catch (error) {\n      setErrMsg(`There is an error! ${error}`);\n    }\n  };\n\n  // Redirects for each function\n  if (redirectToDash) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  if (redirectToSignIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  // handle changes to the inputs and saves creds to state\n  const handleTextChange = (e) => {\n    const creds = { ...credentials };\n    creds[e.target.id] = e.target.value;\n    setCredentials(creds);\n  };\n\n  // switch between register and log in button functions\n  const submitButtonSwitch = (e) => {\n    e.preventDefault();\n    if (e.target.name === \"sign-in\") {\n      onSignIn();\n    } else {\n      onRegister();\n    }\n  };\n\n  //toggle buttons for signin and signup\n  var toggleBtns = document.querySelectorAll(\"sign-in-.js-formToggle\");\n  for (var i = 0; i < toggleBtns.length; i++) {\n    toggleBtns[i].addEventListener(\"click\", toggleFormAnimation);\n  }\n\n  //animation for signin and signup button clicks\n  var firstClick = true;\n  function toggleFormAnimation() {\n    if (!firstClick) {\n      document\n        .querySelector(\".sign-in-js-imageAnimate\")\n        .classList.toggle(\"animate\");\n      document\n        .querySelector(\".sign-in-js-imageAnimate\")\n        .classList.toggle(\"animateOut\");\n      document\n        .querySelector(\".sign-in-js-panel__content\")\n        .classList.toggle(\"animate\");\n      document\n        .querySelector(\".sign-in-js-panel__content\")\n        .classList.toggle(\"animateOut\");\n    } else {\n      firstClick = false;\n      document\n        .querySelector(\".sign-in-js-imageAnimate\")\n        .classList.add(\"animate\");\n      document\n        .querySelector(\".sign-in-js-panel__content\")\n        .classList.add(\"animate\");\n    }\n  }\n\n  return (\n    <div className=\"sign-in-page\">\n      <div className=\"sign-in-panel\">\n        <div className=\"sign-in-panel__visible\">\n          <div className=\"sign-in-panel__content\">\n            <h1 className=\"sign-in-panel__title\"> Sign Up </h1>\n            <form className=\"sign-in-form\">\n              <label className=\"sign-in-form__label\" htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                className=\"sign-in-form__input\"\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={handleTextChange}\n              />\n              <label className=\"sign-in-form__label\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"sign-in-form__input \"\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={handleTextChange}\n              />\n              <button\n                className=\"sign-in-form__btn\"\n                type=\"button\"\n                name=\"register\"\n                value=\"register\"\n                onClick={(e) => submitButtonSwitch(e)}\n              >\n                Submit\n              </button>\n              <button\n                className=\"sign-in-form__toggle sign-in-js-formToggle\"\n                type=\"button\"\n                onClick={toggleFormAnimation}\n              >\n                Or, Sign In\n              </button>\n            </form>\n          </div>\n          <div className=\"sign-in-panel__content sign-in-panel__content--overlay sign-in-js-panel__content \">\n            <h1 className=\"sign-in-panel__title\"> Sign In </h1>\n            <form className=\"sign-in-form\">\n              <label className=\"sign-in-form__label\" htmlFor=\"emailIn\">\n                Email\n              </label>\n              <input\n                className=\"sign-in-form__input\"\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={handleTextChange}\n              />\n              <label className=\"sign-in-form__label\" htmlFor=\"passwordIn\">\n                Password\n              </label>\n              <input\n                className=\"sign-in-form__input \"\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={handleTextChange}\n              />\n              <button\n                className=\"sign-in-form__btn\"\n                type=\"button\"\n                value=\"sign-in\"\n                name=\"sign-in\"\n                onClick={(e) => submitButtonSwitch(e)}\n              >\n                Sign In\n              </button>\n              {/* <br /> */}\n              <button\n                className=\"sign-in-form__toggle sign-in-js-formToggle\"\n                type=\"button\"\n                onClick={toggleFormAnimation}\n              >\n                Or, Sign Up\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"sign-in-panel__back sign-in-js-imageAnimate\">\n          <img\n            className=\"sign-in-panel__img\"\n            src={yoda}\n            alt=\"yoda, protector of the page\"\n            height=\"500\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport NavBar from \"../LandingPage/NavBar\";\nimport \"./youTubeVideos.css\";\n\nexport default function YouTubeVideos() {\n  const [backendData, setBackendData] = useState([]);\n  const [videoIds, setVideoIds] = useState([]);\n\n  // Use useEffect to call the function that will fetch data from backend and set state with response.  Now we have access to all our businesses and can filter through them as needed.  We then call setIdToState() to got through each item in backendData array and pull out the videoId and set it to its own state.\n  useEffect(() => {\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    const callBackendAPI = async () => {\n      const response = await fetch(`http://localhost:4001/youtube`);\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n      return body;\n    };\n\n    callBackendAPI()\n      .then((res) => setBackendData(res.items))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    backendData.forEach((item) => {\n      const id = item.snippet.resourceId.videoId;\n      setVideoIds((videoIds) => [...videoIds, id]);\n    });\n  }, [backendData]);\n\n  console.log(backendData);\n  console.log(videoIds);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      //   autoplay: 1,\n    },\n  };\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"youtube-body\">\n        <div className=\"youtube-navBar\">\n          <NavBar />\n        </div>\n        <div className=\"youtube-navBar\">\n          <p className=\"youtube-title\">Youtube Videos</p>\n        </div>\n        <div className=\"youtube-bigVideoCont\">\n          <div className=\"youtube-bigVideo\">\n            <div>\n              <YouTube videoId={videoIds[0]} opts={opts} />\n            </div>\n          </div>\n        </div>\n        <div className=\"youtube-smallVideosCont\">\n          <div>\n            <div className=\"youtube-smallVideos\">\n              <div className=\"youtube-smallVid\">\n                <YouTube videoId={videoIds[1]} opts={opts} />\n              </div>\n              <div className=\"youtube-smallVid\">\n                <YouTube videoId={videoIds[2]} opts={opts} />\n              </div>\n              <div className=\"youtube-smallVid\">\n                <YouTube videoId={videoIds[3]} opts={opts} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"youtube-moreVids\">\n          <a href=\"http://www.youtube.com\">See More Videos</a>\n          {/* <button onClick={consoleLogs()}>Console Log Vids</button> */}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport NavBar from \"../LandingPage/NavBar\";\nimport \"./gradVideos.css\";\n\nexport default function GradVideos() {\n  const [backendData, setBackendData] = useState([]);\n  const [videoIds, setVideoIds] = useState([]);\n  const [mainVid, setMainVid] = useState(null);\n  const [vidImage, setVidImage] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [description, setDescription] = useState([]);\n  const [randomNumber, setRandomNumber] = useState();\n\n  // Use useEffect to call the function that will fetch data from backend and set state with response.  Now we have access to all our businesses and can filter through them as needed.  We then call setIdToState() to got through each item in backendData array and pull out the videoId and set it to its own state.\n  useEffect(() => {\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    const callBackendAPI = async () => {\n      const response = await fetch(`http://localhost:4001/gradVideos`);\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n      return body;\n    };\n    callBackendAPI()\n      .then((res) => setBackendData(res.items))\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Waits for backendData state to change (by being populated with list of info from grad videos youtube channel) and then fires this useEffect to go through backendData and pull out all the videoIds needed to embed videos into page.  Sets those video Ids to\n  useEffect(() => {\n    backendData.forEach((item) => {\n      const id = item.snippet.resourceId.videoId;\n      setVideoIds((videoIds) => [...videoIds, id]);\n    });\n  }, [backendData]);\n\n  // Find random number between 0 and length of VideoIds array.  Used to get a random video in array.\n  const random = () => {\n    const length = videoIds.length;\n    setRandomNumber(Math.floor(Math.random() * length));\n  };\n\n  // Sets big main video to a random video.\n  useEffect(() => {\n    random();\n    // eslint-disable-next-line\n  }, [videoIds]);\n\n  useEffect(() => {\n    setMainVid(videoIds[randomNumber]);\n    setTitle();\n    // eslint-disable-next-line\n  }, [randomNumber]);\n\n  // Populates VidImage state with thumbnail images pulled from backendData\n  useEffect(() => {\n    backendData.forEach((item) => {\n      const image = item.snippet.thumbnails.standard.url;\n      setVidImage((vidImage) => [...vidImage, image]);\n    });\n    // eslint-disable-next-line\n  }, [videoIds]);\n\n  // console.log(backendData);\n  // console.log(videoIds);\n  // console.log(vidImage);\n\n  // Enables user to set the main video on the page to whatever video they click on the scroll bar.\n  const setCurrentVideo = (idx) => {\n    const title = backendData[idx].snippet.title;\n    const description = backendData[idx].snippet.description;\n    setMainVid(videoIds[idx]);\n    setTitle(title);\n    setDescription(description);\n  };\n  //   console.log(title);\n  //   console.log(description);\n\n  // After main video is done playing this sets a new random video.\n  const pickNewVideo = () => {\n    setMainVid(randomNumber);\n  };\n\n  // Default settings that are required with react-youtube.  Height and width are the size of the iframe.\n  const opts = {\n    height: \"100%\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      //   autoplay: 1,\n    },\n  };\n\n  return (\n    <div className=\"gradVideos-body\">\n      <div className=\"gradVideos-navBar\">\n        <NavBar />\n      </div>\n      <div className=\"gradVideos-leftSide\">\n        <div className=\"gradVideos-mainVid\">\n          <p className=\"gradVideos-title\">GradTV</p>\n          <YouTube videoId={mainVid} opts={opts} onEnd={pickNewVideo} />\n          <p className=\"gradVideos-name\">{title}</p>\n          <a\n            className=\"gradVideos-description gradVideos-linkAnimate \"\n            href={description}\n          >\n            Link to Github\n          </a>\n        </div>\n      </div>\n      <div className=\"gradVideos-rightSide\">\n        <div className=\"gradVideos-scrollBar\">\n          {vidImage.map((image, idx) => {\n            return (\n              <div\n                className=\"gradVideos-smallVidWrapper\"\n                key={idx}\n                onClick={(index) => {\n                  setCurrentVideo(idx, index);\n                }}\n              >\n                <img\n                  className=\"gradVidoes-smallVid rounded img-fluid\"\n                  src={image}\n                  alt=\"Shows snapshot of content\"\n                ></img>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\n\nconst TitleCard = () => {\n  return (\n      <Card className=\"bg-dark text-white box2 box1\">\n        <Card.Body>\n          <Card.Title style={{ fontSize: \"5rem\", padding: \"2% 2%\"}}>Beyond <br/> Bootcamp</Card.Title>\n        </Card.Body>\n      </Card>\n  );\n};\n\nexport default TitleCard;\n","import React, { useState, useEffect} from \"react\";\nimport TitleCard from \"./TitleCard\";\nimport \"./landingPage.css\";\nimport BlogCard from \"./BlogCard\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport { CircleArrow as ScrollUpButton } from \"react-scroll-up-button\";\n// import LazyLoad from 'react-lazy-load';\n\nconst LandingContainer = () => {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:4001/blogs`, {\n        \"Content-Type\": \"application/json\",\n      })\n      .then((res) => {\n        setBlogs(res.data);\n      })\n      .catch((err) => {\n        //TODO: add a toast msg here\n      });\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      {/* <LazyLoad> */}\n      <TitleCard />\n      <NavBar />\n      {blogs.reverse().map((blog, id) => (\n        <BlogCard key={id} blog={blog} />\n      ))}\n      {/* </LazyLoad> */}\n      <ScrollUpButton style={{ backgroundColor: \"#36CFBA\", border: \"none\" }} />\n    </div>\n  );\n};\n\nexport default LandingContainer;\n","import React from \"react\";\nimport LandingContainer from \"./LandingContainer\";\nimport \"./landingPage.css\";\n\nconst LandingPage = () => {\n  return (\n    <div class=\"landing-body\">\n      <LandingContainer />\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\n// import { Route, Switch, Redirect } from \"react-router\"; --- uncomment once protected routes is ready to go\nimport { Route, Switch } from \"react-router\";\n// import cookie from \"cookie\"; --- uncomment once protected routes is ready to go\n\n//Components\nimport About from \"./components/About/About\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport YouTubeVideos from \"./components/YouTube/YouTubeVideos\";\nimport GradVideos from \"./components/YouTube/GradVideos\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\n\n// --- uncomment both below once protected routes is ready to go\n// const checkAuth = () => {\n//   const cookies = cookie.parse(document.cookie);\n//   return cookies[\"loggedIn\"] ? true : false;\n// };\n\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         checkAuth() ? <Component {...props} /> : <Redirect to=\"/signn\" />\n//       }\n//     />\n//   );\n// };\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/youtube\" component={YouTubeVideos} />\n      <Route path=\"/gradVideos\" component={GradVideos} />\n      {/* <ProtectedRoute path=\"/dashboard\" component={Dashboard} /> */}\n      <Route path=\"/dashboard\" component={Dashboard} />\n      {/* <ProtectedRoute path=\"/signin\" component={SignIn} /> */}\n      <Route path=\"/signin\" component={SignIn} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Router from \"./Router\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}